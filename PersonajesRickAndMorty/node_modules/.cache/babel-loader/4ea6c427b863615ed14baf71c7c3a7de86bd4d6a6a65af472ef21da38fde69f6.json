{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      characters: [],\n      currentPage: 1,\n      nextPage: null,\n      prevPage: null,\n      searchQuery: '',\n      statusFilter: ''\n    };\n  },\n  mounted() {\n    this.fetchCharacters();\n  },\n  methods: {\n    async fetchCharacters(url = `https://rickandmortyapi.com/api/character?page=${this.currentPage}`) {\n      try {\n        const response = await axios.get(url);\n        this.characters = response.data.results;\n        this.nextPage = response.data.info.next;\n        this.prevPage = response.data.info.prev;\n      } catch (error) {\n        console.error('Error fetching characters:', error);\n      }\n    },\n    nextPageHandler() {\n      if (this.nextPage) {\n        this.currentPage++;\n        this.fetchCharacters(this.nextPage);\n      }\n    },\n    prevPageHandler() {\n      if (this.prevPage) {\n        this.currentPage--;\n        this.fetchCharacters(this.prevPage);\n      }\n    },\n    async searchCharacters() {\n      const url = `https://rickandmortyapi.com/api/character?name=${this.searchQuery}&status=${this.statusFilter}`;\n      this.fetchCharacters(url);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","characters","currentPage","nextPage","prevPage","searchQuery","statusFilter","mounted","fetchCharacters","methods","url","response","get","results","info","next","prev","error","console","nextPageHandler","prevPageHandler","searchCharacters"],"sources":["C:\\Users\\aldes18\\Desktop\\FWA\\Periodo4FWA\\Vue\\proyectorickymorty\\src\\components\\CharacterList.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <h1>Rick and Morty Characters</h1>\n\n    <!-- Search and Filter Section -->\n    <div class=\"filters\">\n      <input v-model=\"searchQuery\" placeholder=\"Search by name\" @input=\"searchCharacters\" />\n      <select v-model=\"statusFilter\" @change=\"searchCharacters\">\n        <option value=\"\">All Status</option>\n        <option value=\"alive\">Alive</option>\n        <option value=\"dead\">Dead</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n    </div>\n\n    <!-- Loading Message -->\n    <div v-if=\"characters.length === 0\" class=\"loading\">\n      <p>Loading characters...</p>\n    </div>\n\n    <!-- Character Cards -->\n    <div v-for=\"character in characters\" :key=\"character.id\" class=\"character-card\">\n      <img :src=\"character.image\" :alt=\"character.name\" class=\"character-img\" />\n      <p>{{ character.name }}</p>\n    </div>\n\n    <!-- Pagination Buttons -->\n    <div class=\"pagination\">\n      <button @click=\"prevPageHandler\" :disabled=\"!prevPage\">Previous</button>\n      <button @click=\"nextPageHandler\" :disabled=\"!nextPage\">Next</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      characters: [],\n      currentPage: 1,\n      nextPage: null,\n      prevPage: null,\n      searchQuery: '',\n      statusFilter: '',\n    };\n  },\n  mounted() {\n    this.fetchCharacters();\n  },\n  methods: {\n    async fetchCharacters(url = `https://rickandmortyapi.com/api/character?page=${this.currentPage}`) {\n      try {\n        const response = await axios.get(url);\n        this.characters = response.data.results;\n        this.nextPage = response.data.info.next;\n        this.prevPage = response.data.info.prev;\n      } catch (error) {\n        console.error('Error fetching characters:', error);\n      }\n    },\n    nextPageHandler() {\n      if (this.nextPage) {\n        this.currentPage++;\n        this.fetchCharacters(this.nextPage);\n      }\n    },\n    prevPageHandler() {\n      if (this.prevPage) {\n        this.currentPage--;\n        this.fetchCharacters(this.prevPage);\n      }\n    },\n    async searchCharacters() {\n      const url = `https://rickandmortyapi.com/api/character?name=${this.searchQuery}&status=${this.statusFilter}`;\n      this.fetchCharacters(url);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Estilo principal con temática Rick and Morty más impactante */\n.app-container {\n  background: radial-gradient(circle, rgba(20,20,20,1) 0%, rgba(0,0,0,1) 100%);\n  color: #fff;\n  padding: 20px;\n  min-height: 100vh;\n  font-family: 'Press Start 2P', cursive;\n}\n\nh1 {\n  font-size: 2.8rem;\n  color: #00ff9c; /* Verde neón */\n  text-align: center;\n  margin-bottom: 30px;\n  text-shadow: 0px 4px 10px rgba(0, 255, 156, 0.8);\n  letter-spacing: 2px;\n}\n\n/* Búsqueda y Filtro */\n.filters {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.filters input, .filters select {\n  padding: 12px;\n  margin: 0 10px;\n  border: 2px solid #00ff9c;\n  border-radius: 10px;\n  background-color: rgba(28, 28, 28, 0.8);\n  color: #fff;\n  transition: all 0.3s ease;\n  font-size: 1rem;\n}\n\n.filters input::placeholder {\n  color: #aaa;\n}\n\n.filters input:focus, .filters select:focus {\n  outline: none;\n  box-shadow: 0 0 15px rgba(0, 255, 156, 0.5);\n}\n\n/* Tarjetas de personajes */\n.character-card {\n  display: inline-block;\n  margin: 20px;\n  text-align: center;\n  border: 2px solid rgba(0, 255, 156, 0.7);\n  border-radius: 20px;\n  background: linear-gradient(145deg, rgba(28,28,28,1) 0%, rgba(44,44,44,1) 100%);\n  transition: all 0.4s ease;\n  box-shadow: 0px 8px 15px rgba(0, 255, 156, 0.3);\n  position: relative;\n  overflow: hidden;\n}\n\n.character-card:hover {\n  transform: scale(1.07) rotate(1deg);\n  box-shadow: 0px 12px 25px rgba(0, 255, 156, 0.7);\n}\n\n.character-img {\n  width: 180px;\n  height: 180px;\n  object-fit: cover;\n  border-radius: 50%;\n  border: 4px solid #00ff9c;\n  transition: transform 0.4s ease;\n}\n\n.character-card:hover .character-img {\n  transform: scale(1.2) rotate(3deg);\n}\n\np {\n  margin-top: 15px;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: #00ff9c;\n  text-shadow: 0px 3px 5px rgba(0, 255, 156, 0.8);\n}\n\n/* Paginación */\n.pagination {\n  display: flex;\n  justify-content: center;\n  margin: 30px 0;\n}\n\nbutton {\n  padding: 12px 25px;\n  margin: 0 15px;\n  background-color: #00bcd4;\n  color: white;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 1rem;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n}\n\nbutton:hover {\n  background-color: #0097a7;\n  box-shadow: 0px 8px 15px rgba(0, 255, 156, 0.3);\n}\n\nbutton:disabled {\n  background-color: #555;\n  cursor: not-allowed;\n  box-shadow: none;\n}\n\n.loading p {\n  color: #fff;\n  text-align: center;\n  font-size: 1.4rem;\n  font-weight: bold;\n  animation: neon-glow 1.5s ease-in-out infinite alternate;\n}\n\n/* Animación de luz neón */\n@keyframes neon-glow {\n  from {\n    text-shadow: 0 0 10px rgba(0, 255, 156, 0.5), 0 0 20px rgba(0, 255, 156, 0.5);\n  }\n  to {\n    text-shadow: 0 0 20px rgba(0, 255, 156, 1), 0 0 30px rgba(0, 255, 156, 1);\n  }\n}\n</style>\n"],"mappings":"AAmCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAACE,GAAE,GAAI,kDAAkD,IAAI,CAACR,WAAW,EAAE,EAAE;MAChG,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAACF,GAAG,CAAC;QACrC,IAAI,CAACT,UAAS,GAAIU,QAAQ,CAACX,IAAI,CAACa,OAAO;QACvC,IAAI,CAACV,QAAO,GAAIQ,QAAQ,CAACX,IAAI,CAACc,IAAI,CAACC,IAAI;QACvC,IAAI,CAACX,QAAO,GAAIO,QAAQ,CAACX,IAAI,CAACc,IAAI,CAACE,IAAI;MACzC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDE,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAAChB,QAAQ,EAAE;QACjB,IAAI,CAACD,WAAW,EAAE;QAClB,IAAI,CAACM,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC;MACrC;IACF,CAAC;IACDiB,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAAChB,QAAQ,EAAE;QACjB,IAAI,CAACF,WAAW,EAAE;QAClB,IAAI,CAACM,eAAe,CAAC,IAAI,CAACJ,QAAQ,CAAC;MACrC;IACF,CAAC;IACD,MAAMiB,gBAAgBA,CAAA,EAAG;MACvB,MAAMX,GAAE,GAAI,kDAAkD,IAAI,CAACL,WAAW,WAAW,IAAI,CAACC,YAAY,EAAE;MAC5G,IAAI,CAACE,eAAe,CAACE,GAAG,CAAC;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}